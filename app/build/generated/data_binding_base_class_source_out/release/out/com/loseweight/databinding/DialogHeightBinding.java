// Generated by data binding compiler. Do not edit!
package com.loseweight.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.common.view.CMTextView;
import com.common.view.numberpicker.NumberPicker;
import com.loseweight.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DialogHeightBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout llCancel;

  @NonNull
  public final ConstraintLayout llInFt;

  @NonNull
  public final LinearLayout llSave;

  @NonNull
  public final NumberPicker npCM;

  @NonNull
  public final NumberPicker npFt;

  @NonNull
  public final NumberPicker npHeightUnit;

  @NonNull
  public final NumberPicker npIN;

  @NonNull
  public final CMTextView tvFt;

  @NonNull
  public final CMTextView tvIn;

  protected DialogHeightBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout llCancel, ConstraintLayout llInFt, LinearLayout llSave, NumberPicker npCM,
      NumberPicker npFt, NumberPicker npHeightUnit, NumberPicker npIN, CMTextView tvFt,
      CMTextView tvIn) {
    super(_bindingComponent, _root, _localFieldCount);
    this.llCancel = llCancel;
    this.llInFt = llInFt;
    this.llSave = llSave;
    this.npCM = npCM;
    this.npFt = npFt;
    this.npHeightUnit = npHeightUnit;
    this.npIN = npIN;
    this.tvFt = tvFt;
    this.tvIn = tvIn;
  }

  @NonNull
  public static DialogHeightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_height, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DialogHeightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DialogHeightBinding>inflateInternal(inflater, R.layout.dialog_height, root, attachToRoot, component);
  }

  @NonNull
  public static DialogHeightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_height, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DialogHeightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DialogHeightBinding>inflateInternal(inflater, R.layout.dialog_height, null, false, component);
  }

  public static DialogHeightBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DialogHeightBinding bind(@NonNull View view, @Nullable Object component) {
    return (DialogHeightBinding)bind(component, view, R.layout.dialog_height);
  }
}
