// Generated by data binding compiler. Do not edit!
package com.loseweight.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ViewFlipper;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.common.view.CMTextView;
import com.common.view.CTextView;
import com.loseweight.R;
import java.lang.Deprecated;
import java.lang.Object;
import ru.rambler.libs.swipe_layout.SwipeLayout;

public abstract class ItemEditPlanBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final AppCompatImageView imgReplaceMark;

  @NonNull
  public final LinearLayout llDelete;

  @NonNull
  public final LinearLayout llTop;

  @NonNull
  public final SwipeLayout parcelSwipe;

  @NonNull
  public final CMTextView tvName;

  @NonNull
  public final CTextView tvReplace;

  @NonNull
  public final CTextView tvTime;

  @NonNull
  public final ViewFlipper viewFlipper;

  protected ItemEditPlanBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout container, AppCompatImageView imgReplaceMark, LinearLayout llDelete,
      LinearLayout llTop, SwipeLayout parcelSwipe, CMTextView tvName, CTextView tvReplace,
      CTextView tvTime, ViewFlipper viewFlipper) {
    super(_bindingComponent, _root, _localFieldCount);
    this.container = container;
    this.imgReplaceMark = imgReplaceMark;
    this.llDelete = llDelete;
    this.llTop = llTop;
    this.parcelSwipe = parcelSwipe;
    this.tvName = tvName;
    this.tvReplace = tvReplace;
    this.tvTime = tvTime;
    this.viewFlipper = viewFlipper;
  }

  @NonNull
  public static ItemEditPlanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_edit_plan, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemEditPlanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemEditPlanBinding>inflateInternal(inflater, R.layout.item_edit_plan, root, attachToRoot, component);
  }

  @NonNull
  public static ItemEditPlanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_edit_plan, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemEditPlanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemEditPlanBinding>inflateInternal(inflater, R.layout.item_edit_plan, null, false, component);
  }

  public static ItemEditPlanBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemEditPlanBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemEditPlanBinding)bind(component, view, R.layout.item_edit_plan);
  }
}
