// Generated by data binding compiler. Do not edit!
package com.loseweight.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.ViewFlipper;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.common.view.CBTextView;
import com.common.view.CMTextView;
import com.loseweight.PerformWorkOutActivity;
import com.loseweight.R;
import com.mikhaellopez.circularprogressbar.CircularProgressBar;
import java.lang.Boolean;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityPerformExerciesBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatImageView imgBack;

  @NonNull
  public final AppCompatImageView imgCommonQuestion;

  @NonNull
  public final AppCompatImageView imgPrev;

  @NonNull
  public final AppCompatImageView imgSkip;

  @NonNull
  public final AppCompatImageView imgSound;

  @NonNull
  public final AppCompatImageView imgVideo;

  @NonNull
  public final LinearLayout llAfterStartWithSteps;

  @NonNull
  public final LinearLayout llAfterStartWithTime;

  @NonNull
  public final LinearLayout llCompleteExce;

  @NonNull
  public final LinearLayout llPrev;

  @NonNull
  public final LinearLayout llPrevNext;

  @NonNull
  public final ConstraintLayout llReadyToGo;

  @NonNull
  public final LinearLayout llSkip;

  @NonNull
  public final CircularProgressBar progressBarReadyToGo;

  @NonNull
  public final ProgressBar progressBarTop;

  @NonNull
  public final ProgressBar progressBarWorkOut;

  @NonNull
  public final TextView tvAnimation;

  @NonNull
  public final CBTextView tvCountDownReadyToGO;

  @NonNull
  public final CMTextView tvExerciesName;

  @NonNull
  public final CBTextView tvPause;

  @NonNull
  public final CMTextView tvPrev;

  @NonNull
  public final CBTextView tvSecond;

  @NonNull
  public final CMTextView tvSkip;

  @NonNull
  public final CBTextView tvTitleReadyToGo;

  @NonNull
  public final CBTextView tvTotalStep;

  @NonNull
  public final ViewFlipper viewFlipper;

  @Bindable
  protected Boolean mIsLoading;

  @Bindable
  protected PerformWorkOutActivity.ClickHandler mHandler;

  protected ActivityPerformExerciesBinding(Object _bindingComponent, View _root,
      int _localFieldCount, AppCompatImageView imgBack, AppCompatImageView imgCommonQuestion,
      AppCompatImageView imgPrev, AppCompatImageView imgSkip, AppCompatImageView imgSound,
      AppCompatImageView imgVideo, LinearLayout llAfterStartWithSteps,
      LinearLayout llAfterStartWithTime, LinearLayout llCompleteExce, LinearLayout llPrev,
      LinearLayout llPrevNext, ConstraintLayout llReadyToGo, LinearLayout llSkip,
      CircularProgressBar progressBarReadyToGo, ProgressBar progressBarTop,
      ProgressBar progressBarWorkOut, TextView tvAnimation, CBTextView tvCountDownReadyToGO,
      CMTextView tvExerciesName, CBTextView tvPause, CMTextView tvPrev, CBTextView tvSecond,
      CMTextView tvSkip, CBTextView tvTitleReadyToGo, CBTextView tvTotalStep,
      ViewFlipper viewFlipper) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imgBack = imgBack;
    this.imgCommonQuestion = imgCommonQuestion;
    this.imgPrev = imgPrev;
    this.imgSkip = imgSkip;
    this.imgSound = imgSound;
    this.imgVideo = imgVideo;
    this.llAfterStartWithSteps = llAfterStartWithSteps;
    this.llAfterStartWithTime = llAfterStartWithTime;
    this.llCompleteExce = llCompleteExce;
    this.llPrev = llPrev;
    this.llPrevNext = llPrevNext;
    this.llReadyToGo = llReadyToGo;
    this.llSkip = llSkip;
    this.progressBarReadyToGo = progressBarReadyToGo;
    this.progressBarTop = progressBarTop;
    this.progressBarWorkOut = progressBarWorkOut;
    this.tvAnimation = tvAnimation;
    this.tvCountDownReadyToGO = tvCountDownReadyToGO;
    this.tvExerciesName = tvExerciesName;
    this.tvPause = tvPause;
    this.tvPrev = tvPrev;
    this.tvSecond = tvSecond;
    this.tvSkip = tvSkip;
    this.tvTitleReadyToGo = tvTitleReadyToGo;
    this.tvTotalStep = tvTotalStep;
    this.viewFlipper = viewFlipper;
  }

  public abstract void setIsLoading(@Nullable Boolean isLoading);

  @Nullable
  public Boolean getIsLoading() {
    return mIsLoading;
  }

  public abstract void setHandler(@Nullable PerformWorkOutActivity.ClickHandler handler);

  @Nullable
  public PerformWorkOutActivity.ClickHandler getHandler() {
    return mHandler;
  }

  @NonNull
  public static ActivityPerformExerciesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_perform_exercies, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityPerformExerciesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityPerformExerciesBinding>inflateInternal(inflater, R.layout.activity_perform_exercies, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityPerformExerciesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_perform_exercies, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityPerformExerciesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityPerformExerciesBinding>inflateInternal(inflater, R.layout.activity_perform_exercies, null, false, component);
  }

  public static ActivityPerformExerciesBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityPerformExerciesBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (ActivityPerformExerciesBinding)bind(component, view, R.layout.activity_perform_exercies);
  }
}
